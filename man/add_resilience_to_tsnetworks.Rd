% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/resilience_integration.R
\name{add_resilience_to_tsnetworks}
\alias{add_resilience_to_tsnetworks}
\title{Add Resilience Analysis to Existing TSnetworks Results}
\usage{
add_resilience_to_tsnetworks(
  tsnetworks_result,
  capacity_types = c("absorptive", "restorative", "adaptive"),
  window_width = 7L,
  scaling_method = "auto",
  classify_states = TRUE,
  state_method = "threshold",
  ...
)
}
\arguments{
\item{tsnetworks_result}{Result from stna(), rolling_measures(), or other TSnetworks functions}

\item{capacity_types}{Which resilience capacities to analyze}

\item{window_width}{Rolling window size for resilience metrics}

\item{scaling_method}{Scaling method for resilience metrics}

\item{classify_states}{Whether to classify resilience states (default: TRUE)}

\item{state_method}{State classification method}

\item{...}{Additional arguments passed to resilience functions}
}
\value{
Enhanced TSnetworks object with resilience analysis added
}
\description{
Takes results from existing TSnetworks functions and adds comprehensive
resilience analysis. This function automatically detects the type of
TSnetworks result and applies appropriate resilience analysis while
maintaining all existing functionality.
}
\examples{
# Add resilience to existing STNA analysis
data(saqrsteps)
stna_result <- stna(saqrsteps, "Steps", num_states = 4, method = "quantile")
enhanced_result <- add_resilience_to_tsnetworks(stna_result)

# Use enhanced result with existing TSnetworks functions
plot_tna_network(enhanced_result$data, state_col = "resilience_state")

# Add resilience to rolling measures analysis
rolling_result <- rolling_measures(saqrsteps, ts_cols = "Steps", window_width = 7)
enhanced_rolling <- add_resilience_to_tsnetworks(rolling_result)

}
