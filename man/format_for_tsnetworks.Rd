% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/resilience_integration.R
\name{format_for_tsnetworks}
\alias{format_for_tsnetworks}
\title{Convert Resilience Results to TSnetworks Format}
\usage{
format_for_tsnetworks(
  resilience_data,
  target_format = c("generic", "stna", "rolling_measures"),
  preserve_attributes = TRUE
)
}
\arguments{
\item{resilience_data}{Data frame with resilience analysis}

\item{target_format}{Target format: "stna", "rolling_measures", "generic"}

\item{preserve_attributes}{Whether to preserve resilience-specific attributes}
}
\value{
Data frame formatted for existing TSnetworks functions
}
\description{
Ensures resilience analysis results are fully compatible with existing
TSnetworks functions. This function formats resilience data to work
seamlessly with all existing TSnetworks plotting and analysis functions.
}
\examples{
# Format resilience data for existing TSnetworks functions
data(saqrsteps)
resilience_data <- calculate_resilience_metrics(saqrsteps, ts_cols = "Steps")
state_data <- classify_resilience_states(resilience_data)

# Format for use with existing plotting functions
formatted_data <- format_for_tsnetworks(state_data, target_format = "generic")

# Now works with existing TSnetworks functions
# plot_timeseries_enhanced(formatted_data, ts_col = "Steps", state_col = "resilience_state")

}
