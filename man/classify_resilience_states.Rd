% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/resilience_states.R
\name{classify_resilience_states}
\alias{classify_resilience_states}
\title{Classify Resilience States for TSnetworks}
\usage{
classify_resilience_states(
  data,
  method = c("threshold", "kmeans", "quantile", "composite"),
  state_column_name = "resilience_state",
  capacity_weights = c(absorptive = 0.4, restorative = 0.3, adaptive = 0.3),
  threshold_values = NULL,
  n_states = 5,
  ts_cols = NULL
)
}
\arguments{
\item{data}{Data frame with resilience metrics (from calculate_resilience_metrics())}

\item{method}{Classification method: "threshold", "kmeans", "quantile", "composite"}

\item{state_column_name}{Name for the main resilience state column (default: "resilience_state")}

\item{capacity_weights}{Weights for combining capacity scores (absorptive, restorative, adaptive)}

\item{threshold_values}{Custom threshold values for classification}

\item{n_states}{Number of states for methods that require it (default: 5)}

\item{ts_cols}{Time series columns to consider (auto-detected if NULL)}
}
\value{
Data frame with resilience state columns added, compatible with
  plot_tna_network(), plot_timeseries_enhanced(), and other TSnetworks functions
}
\description{
Creates resilience state classifications that are fully compatible with
existing TSnetworks state analysis and plotting functions. This function
analyzes resilience capacity metrics to classify time points into distinct
resilience states that can be used with all existing TSnetworks visualization
and network analysis functions.
}
\examples{
# Basic resilience state classification
data(saqrsteps)
resilience_data <- calculate_resilience_metrics(saqrsteps, ts_cols = "Steps")
state_data <- classify_resilience_states(resilience_data)

# Use with existing TSnetworks plotting
plot_tna_network(state_data, state_col = "resilience_state")
plot_timeseries_enhanced(state_data, ts_col = "Steps", state_col = "resilience_state")

# Custom classification with different weights
custom_states <- classify_resilience_states(
  resilience_data,
  method = "composite",
  capacity_weights = c(absorptive = 0.5, restorative = 0.3, adaptive = 0.2)
)

}
